---
import type { MarkdownHeading } from "astro";

type Props = {
    headings: MarkdownHeading[];
};

const { headings } = Astro.props;
let filteredHeadings = headings.filter((heading) => heading.depth <= (headings.length > 10 ? 2 : 4));
---

<div class="lg:sticky top-4 py-4 max-w-xs max-h-[calc(100vh-2rem)] overflow-y-auto">
    <nav class="flex flex-col w-full rounded-lg border border-slate-200 overflow-hidden p-4 bg-white/80 backdrop-blur-md shadow-sm">
        <h2 class="mb-3 text-lg font-semibold text-slate-800">On this page</h2>
        <ul class="space-y-1">
            {
                filteredHeadings.map((item) => (
                    <li
                        class="list-none"
                        style={`padding-left: ${(item.depth - 1) * 1.25}rem;`}
                        aria-label={item.text}
                        role="listitem"
                    >
                        <a
                            class="flex items-center rounded px-2 py-1.5 transition-colors duration-200 text-slate-600 hover:bg-slate-100 hover:text-slate-900"
                            role="link"
                            href={`#${item.slug}`}
                        >
                            {/* Conditionally apply smaller text size for deeper levels */}
                            <span class:list={["flex-1", item.depth > 2 ? "text-xs" : "text-sm"]} title={item.text}>
                                {item.text}
                            </span>
                        </a>
                    </li>
                ))
            }
        </ul>
    </nav>
</div>