---
import type { CollectionEntry } from "astro:content";
import { isPartOfSeries, getSeriesTitle } from "../../utils/seriesUtils";

interface Props {
  article: CollectionEntry<"articles">;
  compact?: boolean;
}

const { article, compact = false } = Astro.props;

// Only render if article is part of a series
if (!isPartOfSeries(article)) {
  return null;
}

const seriesTitle = getSeriesTitle(article.data.series!);
const currentPart = article.data.series?.currentPart;
const isOngoing = article.data.series?.ongoing || false;
---

{currentPart && (
  <div class={`inline-flex items-center gap-2 ${compact ? 'px-2 py-1' : 'px-3 py-1.5'} bg-gradient-to-r from-purple-100 to-purple-50 border border-purple-200/60 rounded-lg`}>
    <div class="flex-shrink-0">
      <svg xmlns="http://www.w3.org/2000/svg" class={`${compact ? 'w-3 h-3' : 'w-4 h-4'} text-purple-600`} fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
        <path stroke-linecap="round" stroke-linejoin="round" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
      </svg>
    </div>
    
    <div class="flex items-center gap-1.5">
      <span class={`font-semibold text-purple-800 font-['Montserrat_Variable'] ${compact ? 'text-xs' : 'text-sm'}`}>
        Series Part {currentPart}
      </span>
      
      {isOngoing && !compact && (
        <div class="w-1.5 h-1.5 bg-purple-500 rounded-full animate-pulse"></div>
      )}
    </div>
  </div>
)}
