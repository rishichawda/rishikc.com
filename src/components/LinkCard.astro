---
import type { WebsiteMeta } from "../utils/metadataFetcher";

interface Props extends WebsiteMeta {
  altText?: string;
  errorTitle?: string;
}

const {
  url,
  title,
  description,
  image,
  error,
  altText,
  errorTitle,
} = Astro.props;

const displayUrl = url.replace(/^https?:\/\//, "");
const defaultAlt = `${title || "Link"} preview`;
const finalAltText = altText || defaultAlt;
const finalErrorTitle = errorTitle || `Visit ${displayUrl}`;
---

{
  error ? (
    <div class={`max-w-xs w-fit p-3 border-brand-200 bg-brand-100/[0.25] text-brand-600 rounded-lg text-xs`}>
      <a
        href={url}
        target="_blank"
        rel="noopener noreferrer"
        class={`w-full transition-colors text-brand-700 hover:text-brand-900 text-sm align-middle inline-flex flex-row justify-between gap-x-2 items-center`}
        title={finalErrorTitle}
      >
        <span>{displayUrl}</span>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-4 w-4 inline-block"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          stroke-width="2"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
          />
        </svg>
      </a>
    </div>
  ) : (
    <a
      href={url}
      target="_blank"
      rel="noopener noreferrer"
      class={`block w-full max-w-xs bg-white border border-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 overflow-hidden group`}
      title={`Visit ${title || url}`}
    >
      <div class={`flex items-stretch`}>
        {image ? (
          <img
            src={image}
            alt={finalAltText}
            class={`w-2/7 aspect-square object-cover flex-shrink-0 bg-gray-100`}
            loading="lazy"
          />
        ) : (
          <div
            class={`w-2/7 aspect-square flex-shrink-0 bg-gray-100 flex items-center justify-center text-gray-400`}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-6 w-6"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
              stroke-width="1.5"
            >
               <path stroke-linecap="round" stroke-linejoin="round" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
          </div>
        )}
        <div class={`p-3 overflow-hidden flex flex-col justify-center flex-grow min-w-0`}>
          <h4
            class={`text-xs font-semibold text-gray-800 truncate`}
            title={title || "No title available"}
          >
            {title || displayUrl}
          </h4>
          {description && (
            <p
              class={`text-[11px] description-truncate text-gray-500 mt-0.5 leading-tight line-clamp-2`}
              title={description}
            >
              {description}
            </p>
          )}
          <p class={`text-[10px] text-blue-600/70 mt-1 truncate`}>
            {displayUrl}
          </p>
        </div>
      </div>
    </a>
  )
}
