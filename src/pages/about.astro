---
import { getCollection } from "astro:content";
import BaseLayout from "../layouts/base_layout.astro";
import { Schema } from "astro-seo-schema";
import { Image } from "astro:assets";
import profileImage from "../../content/assets/me.jpg";

interface Language { name: string; level: string; }
interface Social { platform: string; url: string; }
interface Position { title: string; period: string; duration: string; location?: string; description?: string; responsibilities?: string[]; }
interface ClubPosition { title: string; period: string; duration: string; location?: string; description?: string; responsibilities?: string[]; }
interface ExtraCurricular { club: string; positions: ClubPosition[]; }
interface Experience { company: string; duration: string; positions: Position[]; website?: string[]; }
interface Education { institution: string; degree: string; period: string; extra_curriculars?: ExtraCurricular[]; }
interface Certification { institution: string; title: string; }
interface ProfileData { name: string; title: string; location: string; summary: string; bio: string | string[]; contact: { linkedin: string; }; skills: string[]; languages: Language[]; certifications: Certification[]; experience: Experience[]; education: Education[]; interests: string[]; socials: Social[]; }

const profileEntry = await getCollection("profile");
const profile = profileEntry[0].data as ProfileData;

const page_info = {
  title: `About | ${profile.name}`,
  description: profile.summary || `Learn more about ${profile.name, profile.title}.`,
  keywords: `Rishi Chawda, About Me, Software Engineer, ${profile.skills.join(', ')}`,
};

const siteUrl = new URL(Astro.url.pathname, Astro.site || "https://rishikc.com").toString();
const profileImageUrl = `${siteUrl.replace(/\/$/, "")}/${profileImage.src}`;

function pluralize(count: number, singular: string, plural: string): string {
  return count === 1 ? `1 ${singular}` : `${count} ${plural}`;
}

const firstJobStartDate = new Date("2018-07-01");
const yearsExperience = new Date().getFullYear() - firstJobStartDate.getFullYear();
---

<BaseLayout page_info={page_info}>
  <Schema
    slot="head"
    item={{
      "@context": "https://schema.org",
      "@type": "Person",
      name: profile.name,
      jobTitle: profile.title,
      worksFor: {
        "@type": "Organization",
        name: profile.experience[0]?.company || "Unknown Company",
      },
      url: siteUrl,
      image: profileImageUrl,
      description: profile.summary,
      address: {
        "@type": "PostalAddress",
        addressLocality: "Bengaluru",
        addressRegion: "KA",
        addressCountry: "IN"
      },
      alumniOf: profile.education.map(edu => ({
        "@type": "EducationalOrganization",
        name: edu.institution
      })),
      knowsLanguage: profile.languages.map(lang => lang.name),
      sameAs: profile.socials.map((social: Social) => social.url),
    }}
  />

  <main class="bg-white">
    <section class="text-center py-20 sm:py-24 lg:py-28 px-4 sm:px-6 lg:px-8 animate-on-scroll fade-in-up bg-gradient-to-b from-brand-50/70 via-white to-white">
      <a href="/" class="inline-block mb-10 text-brand-700 hover:text-brand-900 transition-colors duration-300 text-sm tracking-widest uppercase font-medium font-['Montserrat_Variable'] group">
        <span class="inline-block transition-transform duration-300 group-hover:-translate-x-1">&larr;</span> Back to Home
      </a>
      <h1 class="text-4xl sm:text-5xl lg:text-6xl font-semibold font-['Red_Hat_Display_Variable'] text-brand-900 mb-5 leading-tight sm:leading-tight lg:leading-tight">
        Hi, I'm Rishi
      </h1>
      <p class="text-lg sm:text-xl lg:text-2xl font-light font-['Montserrat_Variable'] text-brand-700 max-w-3xl mx-auto leading-relaxed">
        {profile.title}
      </p>
      <p class="text-base font-light font-['Montserrat_Variable'] text-brand-600 mt-5 max-w-3xl mx-auto flex items-center justify-center">
         <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1.5 text-brand-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
            <path stroke-linecap="round" stroke-linejoin="round" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
          </svg>
        {profile.location}
      </p>
    </section>

    <!-- About Me Section -->
    <section class="relative bg-gradient-to-b from-white via-brand-25/30 to-white py-20 sm:py-24 lg:py-32">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Main Content Grid -->
        <div class="grid grid-cols-1 lg:grid-cols-12 gap-12 lg:gap-16 items-start">
          <!-- Profile Card -->
          <div class="lg:col-span-4 animate-on-scroll fade-in-left">
            <div class="relative group">
              <!-- Decorative background -->
              <div class="absolute inset-0 bg-gradient-to-br from-brand-500/20 via-brand-600/10 to-brand-700/20 rounded-2xl transform rotate-3 group-hover:rotate-6 transition-transform duration-500"></div>
              
              <!-- Main card -->
              <div class="relative bg-white/90 backdrop-blur-sm p-8 lg:p-10 rounded-2xl shadow-xl border border-brand-100/60 hover:shadow-2xl transition-all duration-500">
                <!-- Profile Image -->
                <div class="relative mb-8">
                  <div class="w-48 h-48 mx-auto rounded-2xl overflow-hidden border-4 border-white shadow-2xl transform group-hover:scale-105 transition-transform duration-500">
                    <Image
                      src={profileImage}
                      alt={`Profile picture of ${profile.name}`}
                      width={192}
                      height={192}
                      class="w-full h-full object-cover"
                      loading="eager"
                      decoding="async"
                      format="webp"
                    />
                  </div>
                  <!-- Decorative elements -->
                  <div class="absolute -top-2 -right-2 w-6 h-6 bg-brand-500 rounded-full animate-pulse"></div>
                  <div class="absolute -bottom-2 -left-2 w-4 h-4 bg-brand-600 rounded-full animate-pulse delay-700"></div>
                </div>

                <!-- Profile Info -->
                <div class="text-center space-y-4">
                  <h3 class="text-2xl font-bold font-['Red_Hat_Display_Variable'] text-brand-900">
                    {profile.name}
                  </h3>
                  <p class="text-brand-700 font-medium font-['Montserrat_Variable']">
                    {profile.title}
                  </p>
                  <div class="flex items-center justify-center text-brand-600">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2 text-brand-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                      <path stroke-linecap="round" stroke-linejoin="round" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                    </svg>
                    <span class="font-['Montserrat_Variable']">{profile.location}</span>
                  </div>
                </div>

                <!-- Interests & Hobbies -->
                <div class="mt-8 p-4 bg-gradient-to-r from-brand-50 to-brand-100/50 rounded-xl border border-brand-200/50">
                  <h5 class="text-lg font-semibold font-['Red_Hat_Display_Variable'] text-brand-800 mb-3 text-center">
                    Interests & Hobbies
                  </h5>
                  <div class="flex flex-wrap gap-2 justify-center">
                    {profile.interests.map((interest) => (
                      <span class="interest-tag px-3 py-1.5 bg-white text-brand-700 text-sm font-medium font-['Montserrat_Variable'] rounded-full border border-brand-200/60 shadow-xs">
                        {interest}
                      </span>
                    ))}
                  </div>
                </div>

                <!-- Social Links -->
                <div class="mt-8">
                  <h4 class="text-lg font-semibold font-['Red_Hat_Display_Variable'] text-brand-800 mb-4 text-center">
                    Connect with Me
                  </h4>
                  <div class="flex flex-wrap gap-3 justify-center">
                    {profile.socials.map((social) => (
                      <a
                        href={social.url}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="social-link inline-flex items-center px-4 py-2 rounded-xl bg-white text-brand-700 hover:bg-brand-700 hover:text-white transition-all duration-300 shadow-md hover:shadow-lg border border-brand-200/80 group transform hover:-translate-y-1"
                        aria-label={`Visit my ${social.platform} profile`}
                      >
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2 opacity-80 group-hover:opacity-100 transition-opacity" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                          <path stroke-linecap="round" stroke-linejoin="round" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1" />
                        </svg>
                        <span class="font-['Montserrat_Variable'] text-sm font-medium">{social.platform}</span>
                      </a>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Content Area -->
          <div class="lg:col-span-8 animate-on-scroll fade-in-right">
            <div class="space-y-8">
              <!-- Bio Section -->
              <div class="prose prose-lg max-w-none">
                {Array.isArray(profile.bio) ? (
                  <div class="space-y-6">
                    {profile.bio.map((paragraph, index) => (
                      <div class={`text-xl sm:text-2xl font-light font-['Montserrat_Variable'] text-gray-800 leading-relaxed ${index === 0 ? 'first-letter:text-6xl first-letter:font-bold first-letter:text-brand-700 first-letter:float-left first-letter:mr-3 first-letter:mt-1 first-letter:leading-none' : ''}`}>
                        {paragraph}
                      </div>
                    ))}
                  </div>
                ) : (
                  <div class="text-xl sm:text-2xl font-light font-['Montserrat_Variable'] text-gray-800 leading-relaxed mb-8 first-letter:text-6xl first-letter:font-bold first-letter:text-brand-700 first-letter:float-left first-letter:mr-3 first-letter:mt-1 first-letter:leading-none">
                    {profile.bio}
                  </div>
                )}
                
                <div class="space-y-6 text-lg font-light font-['Montserrat_Variable'] text-gray-700 leading-relaxed">
                  <p>
                    With over <strong class="font-medium text-brand-800">{pluralize(yearsExperience, 'year', 'years')}</strong> of experience in the tech industry, I've had the privilege of working on diverse projects, from developing scalable web applications to contributing to DevSecOps tooling at <a href={profile.experience[0]?.website?.[0] || '#'} target="_blank" rel="noopener noreferrer" class="text-brand-700 hover:text-brand-900 underline decoration-brand-300 hover:decoration-brand-500 decoration-1 underline-offset-2 transition-all duration-300 font-medium">{profile.experience[0]?.company || 'my current role'}</a>.
                  </p>
                  
                  <p>
                    My journey in software development is driven by a curiosity for technology and a desire to build things that are not only functional but also elegant and user-friendly. I believe in writing clean, maintainable code and creating experiences that make a difference.
                  </p>
                </div>
              </div>

              <!-- Quick Facts -->
              <div class="grid grid-cols-1 sm:grid-cols-3 gap-4 mt-12">
                <div class="bg-white/60 backdrop-blur-sm p-5 rounded-xl border border-brand-100/60 shadow-md hover:shadow-lg transition-all duration-300 text-center">
                  <div class="text-2xl font-bold font-['Red_Hat_Display_Variable'] text-brand-700 mb-1">
                    {pluralize(yearsExperience, 'Year', 'Years')}
                  </div>
                  <p class="text-sm font-medium font-['Montserrat_Variable'] text-gray-600">
                    of Professional Experience
                  </p>
                </div>

                <div class="bg-white/60 backdrop-blur-sm p-5 rounded-xl border border-brand-100/60 shadow-md hover:shadow-lg transition-all duration-300 text-center">
                  <div class="text-2xl font-bold font-['Red_Hat_Display_Variable'] text-brand-700 mb-1">
                    ∞
                  </div>
                  <p class="text-sm font-medium font-['Montserrat_Variable'] text-gray-600">
                    Cups of Coffee Consumed
                  </p>
                </div>

                <div class="bg-white/60 backdrop-blur-sm p-5 rounded-xl border border-brand-100/60 shadow-md hover:shadow-lg transition-all duration-300 text-center">
                  <div class="text-2xl font-bold font-['Red_Hat_Display_Variable'] text-brand-700 mb-1">
                    📸
                  </div>
                  <p class="text-sm font-medium font-['Montserrat_Variable'] text-gray-600">
                    Always Ready for Adventure
                  </p>
                </div>
              </div>

              <!-- CTA Button -->
              <div class="pt-8">
                <a href="/career/" class="inline-flex items-center px-8 py-4 bg-brand-700 text-white font-semibold font-['Montserrat_Variable'] rounded-xl shadow-lg hover:shadow-xl hover:bg-brand-800 transition-all duration-300 transform hover:-translate-y-1 group">
                  <span>Explore my career journey</span>
                  <svg class="w-5 h-5 ml-3 transition-transform duration-300 group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                  </svg>
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="max-w-[1100px] mx-auto px-4 sm:px-6 lg:px-8 text-center py-16 sm:py-20 lg:py-24 animate-on-scroll fade-in-up">
       <h2 class="text-3xl sm:text-4xl font-medium font-['Red_Hat_Display_Variable'] text-brand-800 mb-6 leading-snug">
         Beyond the Code
       </h2>
       <p class="text-base sm:text-lg font-light font-['Montserrat_Variable'] text-gray-700 leading-relaxed sm:leading-relaxed max-w-3xl mx-auto mb-10">
         When I step away from the keyboard, I often find myself behind a camera lens. Photography is a passion that allows me to capture moments and see the world from different perspectives.
       </p>
       <a href="/gallery/" class="inline-flex items-center text-brand-700 hover:text-brand-900 font-medium font-['Montserrat_Variable'] group transition-all duration-300 text-base">
         <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 opacity-80 group-hover:opacity-100 transition-opacity" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
           <path stroke-linecap="round" stroke-linejoin="round" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z" />
           <path stroke-linecap="round" stroke-linejoin="round" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z" />
         </svg>
         View my photography gallery
         <svg class="w-5 h-5 ml-1.5 transition-transform duration-300 group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path></svg>
       </a>
    </section>

    <section class="py-16 sm:py-20 lg:py-24 px-4 sm:px-6 lg:px-8 text-center animate-on-scroll fade-in-up bg-gray-50/50">
      <div class="max-w-xl mx-auto bg-white p-10 md:p-12 rounded-lg shadow-lg border border-gray-200/80">
        <h2 class="text-2xl sm:text-3xl font-['Red_Hat_Display_Variable'] font-semibold text-gray-900 mb-5 leading-snug">
          Let's Connect
        </h2>
        <p class="text-gray-600 font-['Montserrat_Variable'] mb-8 leading-relaxed">
          Have a project in mind, a question, or just want to chat about tech or photography? Feel free to reach out.
        </p>
        <div class="flex flex-col sm:flex-row justify-center items-center gap-4 sm:gap-5">
          <a
            href="/contact/"
            class="inline-flex items-center justify-center w-full sm:w-auto bg-brand-700 text-white px-8 py-3 rounded-lg font-semibold font-['Montserrat_Variable'] text-base hover:bg-brand-800 transition-all duration-300 shadow-md hover:shadow-lg transform hover:-translate-y-0.5 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brand-500"
          >
             <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
               <path stroke-linecap="round" stroke-linejoin="round" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
             </svg>
            Get in Touch
          </a>
          <a
            href="/articles/"
            class="inline-flex items-center justify-center w-full sm:w-auto bg-white text-brand-700 border border-gray-300 px-8 py-3 rounded-lg font-semibold font-['Montserrat_Variable'] text-base hover:bg-gray-50 transition-colors duration-300 shadow-sm hover:shadow transform hover:-translate-y-0.5 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brand-500"
          >
             <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
               <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
             </svg>
            Read My Articles
          </a>
        </div>
      </div>
    </section>

  </main>
</BaseLayout>

<style>
  /* Animation Classes */
  .fade-in-up {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    will-change: opacity, transform;
  }
  .fade-in-left {
    opacity: 0;
    transform: translateX(-20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    will-change: opacity, transform;
  }
  .fade-in-right {
    opacity: 0;
    transform: translateX(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    will-change: opacity, transform;
  }
  .visible.fade-in-up,
  .visible.fade-in-left,
  .visible.fade-in-right {
    opacity: 1;
    transform: translate(0, 0);
    will-change: auto;
  }

  /* Staggered animation delays */
  .animate-on-scroll:nth-child(odd) { transition-delay: 0.1s; }
  .animate-on-scroll:nth-child(even) { transition-delay: 0.2s; }

  /* First letter styling */
  .prose .first-letter\:text-6xl:first-letter {
    font-family: 'Red Hat Display Variable', sans-serif;
    line-height: 0.8;
    margin-right: 0.5rem;
    margin-top: 0.2rem;
    float: left;
  }

  /* Enhanced social links */
  .social-link {
    position: relative;
    overflow: hidden;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  .social-link:hover {
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
  }
  .social-link::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transition: left 0.5s;
  }
  .social-link:hover::before {
    left: 100%;
  }

  /* Interest tags styling */
  .interest-tag {
    cursor: default;
  }

  /* Subtle shadow for interest tags */
  .shadow-xs {
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  }

  /* Card hover effects */
  .group:hover .group-hover\:scale-105 {
    transform: scale(1.05);
  }
  .group:hover .group-hover\:scale-110 {
    transform: scale(1.1);
  }
  .group:hover .group-hover\:rotate-6 {
    transform: rotate(6deg);
  }

  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }

  /* Pulse animations for decorative elements */
  @keyframes pulse-slow {
    0%, 100% { opacity: 0.6; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.1); }
  }
  .animate-pulse {
    animation: pulse-slow 3s ease-in-out infinite;
  }
  .delay-700 {
    animation-delay: 0.7s;
  }

  /* Backdrop blur support */
  .backdrop-blur-sm {
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
  }

  /* Gradient text effects */
  .bg-gradient-to-r {
    background-image: linear-gradient(to right, var(--tw-gradient-stops));
  }

  /* Enhanced focus states */
  .focus\:ring-2:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
    box-shadow: 0 0 0 2px var(--tw-ring-color);
  }

  /* Fallback animations for reduced motion preference */
  @media (prefers-reduced-motion: no-preference) {
    .animate-on-scroll {
      animation: fallbackFadeIn 1s forwards 1s;
    }
    @keyframes fallbackFadeIn {
      to {
        opacity: 1;
        transform: translate(0, 0);
      }
    }
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .fade-in-up,
    .fade-in-left,
    .fade-in-right {
      opacity: 1 !important;
      transform: none !important;
      transition: none !important;
      animation: none !important;
    }
    .social-link,
    .group {
      transition: none !important;
    }
    .social-link:hover,
    .group:hover * {
      transform: none !important;
    }
  }

  /* Border styles for subtle accent */
  .border-l-2 {
    border-left-width: 2px;
    border-left-style: solid;
  }

  /* Enhanced button styles */
  .transform {
    transform: translateZ(0); /* Enable hardware acceleration */
  }

  /* Improved typography */
  .leading-tight { line-height: 1.25; }
  .leading-relaxed { line-height: 1.625; }
  .underline-offset-4 { text-underline-offset: 4px; }
  .decoration-2 { text-decoration-thickness: 2px; }

  /* Custom grid responsive behavior */
  @media (min-width: 1024px) {
    .lg\:col-span-4 { grid-column: span 4 / span 4; }
    .lg\:col-span-8 { grid-column: span 8 / span 8; }
    .lg\:col-span-12 { grid-column: span 12 / span 12; }
    .grid-cols-12 { grid-template-columns: repeat(12, minmax(0, 1fr)); }
  }
</style>

<script>
  function scrollObserver() {
    try {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('visible');
            // Remove will-change after animation completes
            setTimeout(() => {
              (entry.target as HTMLElement).style.willChange = 'auto';
            }, 400);
          }
        });
      }, {
        threshold: 0.15,
        rootMargin: '0px 0px -30px 0px'
      });

      // Use requestAnimationFrame to batch DOM operations
      requestAnimationFrame(() => {
        document.querySelectorAll('.animate-on-scroll').forEach(element => {
          element.classList.remove('visible');
          observer.observe(element);
        });
      });
    } catch (error) {
      console.error('Animation observer error:', error);
      // Fallback: show all content immediately
      requestAnimationFrame(() => {
        document.querySelectorAll('.animate-on-scroll').forEach(element => {
          element.classList.add('visible');
          (element as HTMLElement).style.willChange = 'auto';
        });
      });
    }
  }

  function ensureContentVisibility() {
    setTimeout(() => {
      document.querySelectorAll('.animate-on-scroll').forEach(element => {
        if (!element.classList.contains('visible')) {
          element.classList.add('visible');
          (element as HTMLElement).style.willChange = 'auto';
        }
      });
    }, 1500);
  }

  // Use passive event listeners for better performance
  document.addEventListener('DOMContentLoaded', scrollObserver, { passive: true });
  document.addEventListener('astro:page-load', scrollObserver, { passive: true });
  
  // Delay ensureContentVisibility to reduce initial load impact
  setTimeout(ensureContentVisibility, 100);
</script>
