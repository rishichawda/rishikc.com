---
import BaseLayout from "../layouts/base_layout.astro";
import { getCollection } from "astro:content";
import "../styles/global.css";
import { Schema } from "astro-seo-schema";

// Fetch quotes data
const quotesData = await getCollection("quotes");
const quotes = quotesData[1].data;

// Get current date for "last updated"
const currentDate = new Date(quotesData[0].data);
const formattedDate = currentDate.toLocaleDateString("en-US", {
  year: "numeric",
  month: "long",
  day: "numeric",
});

const page_info = {
  title: "Reads - Rishi Chawda",
  description:
    "A collection of quotes and passages that inspire, provoke thought, or simply resonate with me",
  keywords: "quotes, books, reading, inspiration, Rishi Chawda",
};

const pageUrl = new URL(
  Astro.url.pathname,
  Astro.site || "https://rishikc.com",
).toString();
---

<BaseLayout page_info={page_info}>
  <!-- Reads Page JSON-LD Schema -->
  <Schema
    slot="head"
    item={{
      "@context": "https://schema.org",
      "@type": "CollectionPage",
      name: "Reads - Rishi Chawda",
      description:
        "A collection of quotes and passages that inspire, provoke thought, or simply resonate with me",
      url: pageUrl,
      mainEntity: {
        "@type": "ItemList",
        numberOfItems: quotes.length,
        itemListElement: quotes.map((quote, index) => ({
          "@type": "ListItem",
          position: index + 1,
          item: {
            "@type": "Quotation",
            text: quote.quote,
            author: quote.info ? quote.info.split(",")[0] : undefined,
          },
        })),
      },
    }}
  />

  <main
    class="font-['Red_Hat_Display_Variable'] min-h-screen reads-page-background"
  >
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16 sm:py-20 pt-10">
      <a
        href="/"
        class="inline-flex items-center text-brand-800/90 hover:text-brand-950 mb-16 sm:mb-20 group text-sm tracking-[0.15em] uppercase transition-colors duration-300 font-['Montserrat_Variable']"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-4 w-4 mr-3 group-hover:-translate-x-1 transition-transform"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
        Back to home
      </a>

      <div class="mb-16 sm:mb-20 text-center">
        <h1
          class="text-4xl sm:text-5xl font-light text-brand-950 mb-3 tracking-tight leading-tight"
        >
          Reads
        </h1>
        <p
          class="text-xs text-brand-700/60 mb-6 font-['Montserrat_Variable'] uppercase tracking-widest"
        >
          Last updated: {formattedDate}
        </p>
        <p
          class="text-brand-800/70 text-lg sm:text-xl leading-relaxed font-light max-w-3xl mx-auto font-['Montserrat_Variable']"
        >
          A collection of quotes and passages that have inspired me, challenged
          my thinking, or simply resonated with me.
        </p>
      </div>

      <!-- Quotes Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8 md:gap-10">
        {
          quotes.map((quote, index) => (
            <div
              class="quote-card relative bg-white rounded-xl shadow-lg p-6 py-8 md:p-8 md:py-10 flex flex-col justify-center items-center overflow-hidden"
              style={`--index: ${index};`}
              transition:animate="fade"
            >
              <span class="absolute -top-2 -left-2 text-[6rem] text-brand-100/50 font-serif opacity-80 z-0 select-none" aria-hidden="true">“</span>
              <blockquote class="mb-5 z-10">
                <p class="quote-text text-center sm:text-md text-brand-800/90 leading-relaxed font-light font-['Montserrat_Variable']">
                  {quote.quote}
                </p>
              </blockquote>
              {quote.info && (
                <cite class="quote-author text-center block text-brand-900/70 text-sm font-medium italic font-['Montserrat_Variable'] z-10">
                  — {quote.info}
                </cite>
              )}
            </div>
          ))
        }
      </div>
    </div>
  </main>
</BaseLayout>

<style>
  /* 1. Staggered Entry Animation (Fallback) */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(25px) scale(0.98);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  /* 2. Elegant Hover Effects */
  .quote-card {
    transition:
      transform 0.35s cubic-bezier(0.2, 0.8, 0.2, 1),
      box-shadow 0.35s cubic-bezier(0.2, 0.8, 0.2, 1),
      background-color 0.3s ease;
    backface-visibility: hidden;
    perspective: 1000px;
  }

  .quote-card:hover {
    transform: translateY(-5px) scale(1.015);
    box-shadow: 0 15px 35px -10px rgba(0, 0, 0, 0.12);
    background-color: rgba(var(--color-brand-50), 0.5);
  }

  /* 3. Scroll-Triggered Animations - View Transitions */
  @media (prefers-reduced-motion: no-preference) {
    .quote-card {
      opacity: 0;
      transform: translateY(30px) scale(0.9);
      will-change: opacity, transform;
      view-timeline-name: --card-reveal;
      view-timeline-axis: block;
      animation: revealCard linear both;
      animation-timeline: --card-reveal;
      animation-range: entry 5% cover 35%;
    }

    @keyframes revealCard {
      from {
        opacity: 0;
        transform: translateY(30px) scale(0.95);
      }
      to {
        opacity: 1;
        transform: translateY(0) scale(1);
      }
    }

    @supports not (animation-timeline: --card-reveal) {
      .quote-card {
        animation: fadeInUp 0.7s cubic-bezier(0.22, 1, 0.36, 1) forwards;
        animation-delay: calc(var(--index) * 0.08s);
      }
    }
  }

  /* 6. Page Background Animation */
  .reads-page-background {
    background: linear-gradient(
      135deg,
      rgba(var(--color-brand-50), 0.3),
      rgba(var(--color-brand-100), 0.15) 30%,
      rgba(var(--color-brand-50), 0.25) 60%,
      rgba(var(--color-brand-100), 0.1)
    );
    background-size: 300% 300%;
    animation: gradientFloat 30s ease-in-out infinite;
    position: relative;
    z-index: 0;
  }

  .reads-page-background::after {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.025;
    pointer-events: none;
    z-index: -1;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.7' numOctaves='2' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)'/%3E%3C/svg%3E");
  }

  @keyframes gradientFloat {
    0% { background-position: 0% 50%; }
    25% { background-position: 50% 25%; }
    50% { background-position: 100% 50%; }
    75% { background-position: 50% 75%; }
    100% { background-position: 0% 50%; }
  }

  /* 7. Quote Author Reveal */
  .quote-author {
    opacity: 0.6;
    transform: translateY(5px);
    transition: all 0.4s ease;
  }

  /* Typography Refinements */
  .quote-text {
    line-height: 1.7;
  }

  .quote-author {
    letter-spacing: 0.01em;
  }

  @media (prefers-reduced-motion: reduce) {
    .quote-card,
    .quote-author,
    .quote-text,
    .reads-page-background {
      animation: none !important;
      transition: none !important;
    }

    .quote-card {
      opacity: 1 !important;
      transform: none !important;
      animation-delay: 0s !important;
    }
    .quote-author {
       opacity: 1;
       transform: none;
    }
  }
</style>
