---
import BaseLayout from "../layouts/base_layout.astro";
import { getCollection } from "astro:content";
import "../styles/global.css";
import { Schema } from "astro-seo-schema";

// Fetch quotes data
const quotesData = await getCollection("quotes");
const quotes = quotesData[1].data;

// Get current date for "last updated"
const currentDate = new Date(quotesData[0].data);
const formattedDate = currentDate.toLocaleDateString("en-US", {
  year: "numeric",
  month: "long",
  day: "numeric",
});

const page_info = {
  title: "Reads - Rishi Chawda",
  description:
    "A collection of quotes and passages that inspire, provoke thought, or simply resonate with me",
  image: "/favicon.svg",
  keywords: "quotes, books, reading, inspiration, Rishi Chawda",
};

const pageUrl = new URL(
  Astro.url.pathname,
  Astro.site || "https://rishikc.com",
).toString();
---

<BaseLayout page_info={page_info}>
  <!-- Reads Page JSON-LD Schema -->
  <Schema
    slot="head"
    item={{
      "@context": "https://schema.org",
      "@type": "CollectionPage",
      name: "Reads - Rishi Chawda",
      description:
        "A collection of quotes and passages that inspire, provoke thought, or simply resonate with me",
      url: pageUrl,
      mainEntity: {
        "@type": "ItemList",
        numberOfItems: quotes.length,
        itemListElement: quotes.map((quote, index) => ({
          "@type": "ListItem",
          position: index + 1,
          item: {
            "@type": "Quotation",
            text: quote.quote,
            author: quote.info ? quote.info.split(",")[0] : undefined,
          },
        })),
      },
    }}
  />

  <main
    class="font-['Red_Hat_Display_Variable'] min-h-screen reads-page-background"
  >
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-20 pt-10">
      <a
        href="/"
        class="inline-flex items-center text-brand-800/90 hover:text-brand-950 mb-20 group text-[15px] tracking-[0.2em] uppercase transition-colors duration-300"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-4 w-4 mr-3 group-hover:-translate-x-1 transition-transform"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
        Back to home
      </a>

      <div class="mb-12 text-center">
        <h1
          class="text-4xl lg:text-5xl font-light text-brand-950 mb-4 tracking-[-0.02em] leading-tight"
        >
          Reads
        </h1>
        <p
          class="text-xs text-brand-700/80 mb-6 font-['Montserrat_Variable'] uppercase tracking-wider"
        >
          Last updated: {formattedDate}
        </p>
        <p
          class="text-brand-800/90 text-lg leading-relaxed font-light max-w-2xl mx-auto font-['Montserrat_Variable']"
        >
          A collection of quotes and passages that have inspired me, challenged
          my thinking, or simply resonated with me.
        </p>
      </div>

      <!-- Quotes Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8">
        {
          quotes.map((quote, index) => (
            <div
              class="quote-card bg-white rounded-xl shadow-lg p-6 md:p-8 flex flex-col justify-between items-center"
              style={`--index: ${index};`}
              transition:animate="fade"
            >
              <blockquote class="mb-4">
                <p class="quote-text text-center text-md text-brand-800/90 leading-relaxed font-light font-['Montserrat_Variable']">
                  "{quote.quote}"
                </p>
              </blockquote>
              {quote.info && (
                <cite class="quote-author text-center block text-brand-900/95 text-sm font-medium italic font-['Montserrat_Variable']">
                  â€” {quote.info}
                </cite>
              )}
            </div>
          ))
        }
      </div>
    </div>
  </main>
</BaseLayout>

<style>
  /* 1. Staggered Entry Animation */
  .quote-card {
    opacity: 0;
    transform: translateY(30px) scale(0.95);
    animation: fadeInUp 0.8s cubic-bezier(0.22, 1, 0.36, 1) forwards;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  /* 2. Elegant Hover Effects */
  .quote-card {
    transition:
      transform 0.4s cubic-bezier(0.2, 0.8, 0.2, 1),
      box-shadow 0.4s cubic-bezier(0.2, 0.8, 0.2, 1),
      background-color 0.3s ease;
    backface-visibility: hidden;
    perspective: 1000px;
  }

  .quote-card:hover {
    transform: translateY(-6px) scale(1.01);
    box-shadow: 0 20px 40px -12px rgba(0, 0, 0, 0.15);
    background-color: rgba(var(--color-brand-50), 0.7);
  }

  /* 3. Scroll-Triggered Animations - Pure CSS approach */
  @media (prefers-reduced-motion: no-preference) {
    .quote-card {
      /* Initial state for all cards */
      opacity: 0;
      transform: translateY(40px) scale(0.7);
      will-change: opacity, transform;

      /* View transition animation */
      view-timeline-name: --card-reveal;
      view-timeline-axis: block;
      animation: revealCard linear both;
      animation-timeline: --card-reveal;
      animation-range: entry 10% cover 30%;
    }

    @keyframes revealCard {
      from {
        opacity: 0;
        transform: translateY(40px) scale(0.92);
      }
      to {
        opacity: 1;
        transform: translateY(0) scale(1);
      }
    }

    /* Fallback for browsers that don't support scroll-driven animations */
    @supports not (animation-timeline: --card-reveal) {
      .quote-card {
        animation: fadeInUp 0.8s cubic-bezier(0.22, 1, 0.36, 1) forwards;
      }
    }
  }

  /* 6. Page Background Animation */
  .reads-page-background {
    background: linear-gradient(
      135deg,
      rgba(var(--color-brand-50), 0.4),
      rgba(var(--color-brand-100), 0.2) 30%,
      rgba(var(--color-brand-50), 0.3) 60%,
      rgba(var(--color-brand-100), 0.15)
    );
    background-size: 400% 400%;
    animation: gradientFloat 25s ease-in-out infinite;
    position: relative;
    z-index: 0;
  }

  /* Add subtle noise overlay for texture */
  .reads-page-background::after {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.03;
    pointer-events: none;
    z-index: -1;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)'/%3E%3C/svg%3E");
  }

  @keyframes gradientFloat {
    0% {
      background-position: 0% 50%;
    }
    25% {
      background-position: 50% 25%;
    }
    50% {
      background-position: 100% 50%;
    }
    75% {
      background-position: 50% 75%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  /* 7. Quote Author Reveal */
  .quote-author {
    opacity: 0.7;
    transform: translateX(-10px);
    transition: all 0.3s ease;
  }

  .quote-card:hover .quote-author {
    opacity: 1;
    transform: translateX(0);
  }

  /* Accessibility: respect user preference for reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .quote-card,
    .quote-author,
    .quote-text,
    .reads-page-background {
      animation: none;
      transition: none;
    }

    .quote-card {
      opacity: 1;
      transform: none;
    }
  }
</style>
