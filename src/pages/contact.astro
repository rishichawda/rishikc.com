---
import BaseLayout from "../layouts/base_layout.astro";
import "../styles/global.css";
import { Schema } from "astro-seo-schema";
import { getCollection } from "astro:content";

interface Social { platform: string; url: string; }
interface ProfileData { name: string; socials: Social[]; }

const profileEntry = await getCollection("profile");
const profile = profileEntry[0].data as ProfileData;

const page_info = {
  title: `Contact - ${profile.name}`,
  description:
    `Get in touch with ${profile.name} for collaborations, job opportunities, or general inquiries`,
  keywords: `contact, email, collaboration, ${profile.name}, software engineer`,
};

const emailJSPublicKey = import.meta.env.PUBLIC_EMAILJS_PUBLIC_KEY;
const emailJSServiceID = import.meta.env.PUBLIC_EMAILJS_SERVICE_ID;
const emailJSTemplateID = import.meta.env.PUBLIC_EMAILJS_TEMPLATE_ID;

const pageUrl = new URL(
  Astro.url.pathname,
  Astro.site || "https://rishikc.com",
).toString();
---

<BaseLayout page_info={page_info}>
  <Schema
    slot="head"
    item={{
      "@context": "https://schema.org",
      "@type": "ContactPage",
      name: `Contact ${profile.name}`,
      description: page_info.description,
      url: pageUrl,
      mainEntity: {
        "@type": "Person",
        name: profile.name,
        email: "mailto:hello@rishikc.com",
        url: "https://rishikc.com",
        sameAs: profile.socials.map((social: Social) => social.url),
      },
    }}
    }}
  />

  <main
    class="font-['Red_Hat_Display_Variable'] min-h-screen bg-gradient-to-br from-slate-50 via-white to-slate-100/50 relative overflow-hidden"
  >
    <!-- Background decorative elements -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
      <div class="absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-brand-200/20 to-brand-300/10 rounded-full blur-3xl"></div>
      <div class="absolute -bottom-40 -left-40 w-80 h-80 bg-gradient-to-tr from-brand-100/20 to-brand-200/10 rounded-full blur-3xl"></div>
    </div>

    <div class="relative max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-16 sm:py-24 pt-12 sm:pt-16">
      <a
        href="/"
        class="group inline-flex items-center px-6 py-3 bg-white/90 backdrop-blur-sm border border-brand-200/50 rounded-xl text-brand-700 hover:text-brand-600 hover:bg-white hover:shadow-lg transition-all duration-300 font-['Montserrat_Variable'] text-sm font-medium mb-16 sm:mb-20"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-4 w-4 mr-2 group-hover:-translate-x-1 transition-transform duration-300"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          stroke-width="2"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M10 19l-7-7m0 0l7-7m-7 7h18"
          ></path>
        </svg>
        Back to home
      </a>

      <div class="grid lg:grid-cols-3 gap-12 lg:gap-16">
        <!-- Left column - Contact Info -->
        <div class="lg:col-span-1 space-y-8">
          <div class="text-center lg:text-left">
            <h1
              class="text-4xl lg:text-5xl font-light text-slate-900 mb-6 tracking-tight leading-tight"
            >
              Let's Connect
            </h1>
            <p
              class="text-slate-600 text-lg leading-relaxed font-light font-['Montserrat_Variable']"
            >
              Have a question, proposal, or just want to say hello? Drop me a message through this page and I'll get back to you as soon as possible.
            </p>
          </div>

          <!-- Contact Cards -->
          <div class="space-y-4">
            <!-- Services & Expertise -->
            <div class="bg-white/80 backdrop-blur-sm rounded-2xl p-6 border border-slate-200/50 shadow-sm hover:shadow-md transition-all duration-300 hover:border-brand-300/50 group">
              <div class="flex items-start space-x-4">
                <div class="flex-shrink-0 w-10 h-10 bg-gradient-to-br from-brand-500 to-brand-600 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                  <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
                  </svg>
                </div>
                <div class="flex-1 min-w-0">
                  <h3 class="text-lg font-semibold text-slate-900 font-['Red_Hat_Display_Variable'] mb-2">What I Do</h3>
                  <div class="space-y-1.5">
                    <div class="flex items-center text-sm text-slate-600 font-['Montserrat_Variable']">
                      <div class="w-1.5 h-1.5 bg-brand-500 rounded-full mr-2"></div>
                      Web Applications
                    </div>
                    <div class="flex items-center text-sm text-slate-600 font-['Montserrat_Variable']">
                      <div class="w-1.5 h-1.5 bg-brand-500 rounded-full mr-2"></div>
                      Mobile Applications
                    </div>
                    <div class="flex items-center text-sm text-slate-600 font-['Montserrat_Variable']">
                      <div class="w-1.5 h-1.5 bg-brand-500 rounded-full mr-2"></div>
                      DevSecOps & Consulting
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Availability Status -->
            <div class="bg-white/80 backdrop-blur-sm rounded-2xl p-6 border border-slate-200/50 shadow-sm hover:shadow-md transition-all duration-300 hover:border-brand-300/50 group">
              <div class="flex items-start space-x-4">
                <div class="flex-shrink-0 w-10 h-10 bg-gradient-to-br from-brand-600 to-brand-700 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                  <div class="relative">
                    <div class="w-2.5 h-2.5 bg-white rounded-full"></div>
                    <div class="absolute top-0 left-0 w-2.5 h-2.5 bg-white rounded-full animate-ping"></div>
                  </div>
                </div>
                <div class="flex-1 min-w-0">
                  <h3 class="text-lg font-semibold text-slate-900 font-['Red_Hat_Display_Variable']">Availability</h3>
                  <p class="text-slate-600 font-['Montserrat_Variable']">Open to freelance projects & collaborations</p>
                </div>
              </div>
            </div>

            <!-- Quick Navigation -->
            <div class="bg-white/80 backdrop-blur-sm rounded-2xl p-6 border border-slate-200/50 shadow-sm hover:shadow-md transition-all duration-300 hover:border-brand-300/50 group">
              <div class="flex items-start space-x-4">
                <div class="flex-shrink-0 w-10 h-10 bg-gradient-to-br from-brand-700 to-brand-800 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                  <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                </div>
                <div class="flex-1 min-w-0">
                  <h3 class="text-lg font-semibold text-slate-900 font-['Red_Hat_Display_Variable'] mb-3">Learn More</h3>
                  <div class="space-y-2">
                    <a href="/about/" class="flex items-center justify-between text-sm text-slate-600 hover:text-brand-600 font-['Montserrat_Variable'] transition-colors duration-200 group/link">
                      <span>About Me</span>
                      <svg class="w-4 h-4 group-hover/link:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                      </svg>
                    </a>
                    <a href="/career/" class="flex items-center justify-between text-sm text-slate-600 hover:text-brand-600 font-['Montserrat_Variable'] transition-colors duration-200 group/link">
                      <span>Career Journey</span>
                      <svg class="w-4 h-4 group-hover/link:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                      </svg>
                    </a>
                    <a href="/articles/" class="flex items-center justify-between text-sm text-slate-600 hover:text-brand-600 font-['Montserrat_Variable'] transition-colors duration-200 group/link">
                      <span>Articles & Insights</span>
                      <svg class="w-4 h-4 group-hover/link:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                      </svg>
                    </a>
                    <a href="/gallery/" class="flex items-center justify-between text-sm text-slate-600 hover:text-brand-600 font-['Montserrat_Variable'] transition-colors duration-200 group/link">
                      <span>Photography</span>
                      <svg class="w-4 h-4 group-hover/link:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                      </svg>
                    </a>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Right column - Contact Form -->
        <div class="lg:col-span-2">
          <div
            class="bg-white/80 backdrop-blur-sm rounded-3xl shadow-xl p-8 sm:p-10 lg:p-12 border border-slate-200/50 hover:shadow-2xl transition-all duration-500"
            transition:animate="fade"
          >
            <div class="mb-8">
              <h2 class="text-2xl lg:text-3xl font-light text-slate-900 mb-2 font-['Red_Hat_Display_Variable']">
                Send me a message
              </h2>
              <p class="text-slate-600 font-['Montserrat_Variable']">
                I'd love to hear from you!
              </p>
            </div>

            <form id="contact-form" class="space-y-6">
              <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
                <div class="group">
                  <label
                    for="name"
                    class="block text-sm font-semibold text-slate-700 mb-3 font-['Montserrat_Variable'] transition-colors duration-200 group-focus-within:text-brand-600"
                    >Full Name</label
                  >
                  <input
                    type="text"
                    id="name"
                    name="from_name"
                    required
                    class="w-full px-4 py-4 border-2 border-slate-200 rounded-xl focus:ring-2 focus:ring-brand-500/30 focus:border-brand-500 transition-all duration-300 ease-in-out font-['Montserrat_Variable'] placeholder-slate-400 bg-slate-50/50 focus:bg-white hover:border-slate-300"
                    placeholder="John Doe"
                  />
                  <div class="error-text text-red-500 text-sm mt-2 hidden font-['Montserrat_Variable']">
                    <div class="flex items-center">
                      <svg class="w-4 h-4 mr-1.5" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                      </svg>
                      <span class="error-message"></span>
                    </div>
                  </div>
                </div>

                <div class="group">
                  <label
                    for="email"
                    class="block text-sm font-semibold text-slate-700 mb-3 font-['Montserrat_Variable'] transition-colors duration-200 group-focus-within:text-brand-600"
                    >Email Address</label
                  >
                  <input
                    type="email"
                    id="email"
                    name="reply_to"
                    required
                    class="w-full px-4 py-4 border-2 border-slate-200 rounded-xl focus:ring-2 focus:ring-brand-500/30 focus:border-brand-500 transition-all duration-300 ease-in-out font-['Montserrat_Variable'] placeholder-slate-400 bg-slate-50/50 focus:bg-white hover:border-slate-300"
                    placeholder="john@example.com"
                  />
                  <div class="error-text text-red-500 text-sm mt-2 hidden font-['Montserrat_Variable']">
                    <div class="flex items-center">
                      <svg class="w-4 h-4 mr-1.5" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                      </svg>
                      <span class="error-message"></span>
                    </div>
                  </div>
                </div>
              </div>

              <div class="group">
                <label
                  for="subject"
                  class="block text-sm font-semibold text-slate-700 mb-3 font-['Montserrat_Variable'] transition-colors duration-200 group-focus-within:text-brand-600"
                  >Subject</label
                >
                <div class="relative">
                  <select
                    id="subject"
                    name="subject"
                    required
                    class="w-full px-4 py-4 border-2 border-slate-200 rounded-xl focus:ring-2 focus:ring-brand-500/30 focus:border-brand-500 transition-all duration-300 ease-in-out font-['Montserrat_Variable'] text-slate-700 bg-slate-50/50 focus:bg-white hover:border-slate-300 appearance-none cursor-pointer"
                  >
                    <option value="" disabled selected class="text-slate-400"
                      >Please select a subject</option
                    >
                    <option value="General Inquiry">General Inquiry</option>
                    <option value="Job Opportunity">Job Opportunity</option>
                    <option value="Collaboration">Collaboration Proposal</option>
                    <option value="Consulting">Consulting Request</option>
                    <option value="Other">Other</option>
                  </select>
                  <div class="absolute inset-y-0 right-0 flex items-center pr-4 pointer-events-none">
                    <svg class="h-5 w-5 text-slate-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                  </div>
                </div>
                <div class="error-text text-red-500 text-sm mt-2 hidden font-['Montserrat_Variable']">
                  <div class="flex items-center">
                    <svg class="w-4 h-4 mr-1.5" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                    </svg>
                    <span class="error-message"></span>
                  </div>
                </div>
              </div>

              <div class="group">
                <label
                  for="message"
                  class="block text-sm font-semibold text-slate-700 mb-3 font-['Montserrat_Variable'] transition-colors duration-200 group-focus-within:text-brand-600"
                  >Message</label
                >
                <textarea
                  id="message"
                  name="message"
                  rows="6"
                  required
                  class="w-full px-4 py-4 border-2 border-slate-200 rounded-xl focus:ring-2 focus:ring-brand-500/30 focus:border-brand-500 transition-all duration-300 ease-in-out font-['Montserrat_Variable'] placeholder-slate-400 bg-slate-50/50 focus:bg-white hover:border-slate-300 resize-y min-h-[120px]"
                  placeholder="Tell me about your project, idea, or opportunity..."></textarea>
                <div class="error-text text-red-500 text-sm mt-2 hidden font-['Montserrat_Variable']">
                  <div class="flex items-center">
                    <svg class="w-4 h-4 mr-1.5" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                    </svg>
                    <span class="error-message"></span>
                  </div>
                </div>
              </div>

              <div class="pt-4">
                <button
                  type="submit"
                  id="submit-button"
                  class="group relative w-full sm:w-auto inline-flex items-center justify-center bg-gradient-to-r from-brand-600 to-brand-700 hover:from-brand-700 hover:to-brand-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brand-500 text-white px-8 py-4 rounded-xl transition-all duration-300 ease-in-out text-base font-semibold font-['Montserrat_Variable'] shadow-lg hover:shadow-xl transform hover:scale-105 hover:-translate-y-1"
                >
                  <span class="flex items-center">
                    <svg class="w-5 h-5 mr-2 group-hover:rotate-12 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                    </svg>
                    Send Message
                  </span>
                </button>
              </div>

              <!-- Form Status Messages -->
              <div id="form-status" class="text-center mt-6 hidden">
                <div
                  id="success-message"
                  class="bg-emerald-50 border border-emerald-200 text-emerald-700 px-6 py-4 rounded-xl font-medium font-['Montserrat_Variable'] text-sm hidden"
                >
                  <div class="flex items-center justify-center">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                    </svg>
                    Your message has been sent successfully! I'll get back to you soon.
                  </div>
                </div>
                <div
                  id="error-message"
                  class="bg-red-50 border border-red-200 text-red-700 px-6 py-4 rounded-xl font-medium font-['Montserrat_Variable'] text-sm hidden"
                >
                  <div class="flex items-center justify-center">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                    </svg>
                    There was an error sending your message. Please try again or contact me directly.
                  </div>
                </div>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </main>
</BaseLayout>

<script
  type="text/javascript"
  src="https://cdn.jsdelivr.net/npm/@emailjs/browser@3/dist/email.min.js"
></script>

<script define:vars={{ emailJSPublicKey, emailJSServiceID, emailJSTemplateID }}>
  function setUpForm() {
    // Initialize EmailJS properly
    if (typeof emailjs !== "undefined") {
      // Only initialize if public key exists
      emailjs.init(emailJSPublicKey);
    }

    // Check if the form is already set up
    if (document.getElementById("contact-form").dataset.initialized) {
      return;
    }

    // Mark the form as initialized
    document.getElementById("contact-form").dataset.initialized = "true";

    // Cache DOM elements
    const form = document.getElementById("contact-form");
    const submitButton = document.getElementById("submit-button");
    const formStatus = document.getElementById("form-status");
    const successMessage = document.getElementById("success-message");
    const errorMessage = document.getElementById("error-message");

    // Form configuration - centralizing validation rules and messages
    const formFields = {
      name: {
        validator: (value) => value.trim() !== "",
        errorMessage: "Please enter your name",
      },
      email: {
        validator: (value) => /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(value),
        errorMessage: "Please enter a valid email address",
        emptyMessage: "Please enter your email address",
      },
      subject: {
        validator: (value) => value.trim() !== "",
        errorMessage: "Please select a subject",
      },
      message: {
        validator: (value) => value.trim() !== "",
        errorMessage: "Please enter your message",
      },
    };

    // Single function to validate any field
    function validateField(fieldId, showError = true) {
      const field = document.getElementById(fieldId);
      const errorElement = field.nextElementSibling; // Assumes error div is always next sibling
      const fieldConfig = formFields[fieldId];

      let isValid = true;
      let message = "";

      // For empty email field
      if (fieldId === "email" && !field.value.trim()) {
        isValid = false;
        message = fieldConfig.emptyMessage;
      }
      // Normal validation
      else if (!fieldConfig.validator(field.value)) {
        isValid = false;
        message = fieldConfig.errorMessage;
      }

      // Only update UI if showError is true
      if (showError) {
        if (!isValid) {
          const errorMessageSpan = errorElement.querySelector('.error-message');
          errorMessageSpan.textContent = message;
          errorElement.classList.remove("hidden");
          field.classList.add("border-red-500", "focus:border-red-500", "focus:ring-red-500/50");
          field.classList.remove("border-emerald-500", "focus:border-emerald-500", "focus:ring-emerald-500/50");
          field.classList.remove("border-slate-200", "focus:border-brand-500", "focus:ring-brand-500/30"); // Remove default focus styles on error

          // Announce error for screen readers
          field.setAttribute("aria-invalid", "true");
          errorElement.setAttribute("role", "alert");
        } else {
          errorElement.classList.add("hidden");
          field.classList.remove("border-red-500", "focus:border-red-500", "focus:ring-red-500/50");
          field.classList.add("border-emerald-500", "focus:border-emerald-500", "focus:ring-emerald-500/50"); // Add emerald border on valid input
          field.classList.remove("border-slate-200", "focus:border-brand-500", "focus:ring-brand-500/30"); // Remove default focus styles on success
          field.setAttribute("aria-invalid", "false");
        }
      }

      return isValid;
    }

    // Attach event listeners using event delegation
    form.addEventListener("input", function (event) {
      const target = event.target;
      const fieldId = target.id;

      // Only run for our monitored fields
      if (formFields[fieldId]) {
        validateField(fieldId);
      }
    });

    form.addEventListener(
      "blur",
      function (event) {
        const target = event.target;
        const fieldId = target.id;

        // Only run for our monitored fields
        if (formFields[fieldId]) {
          validateField(fieldId);
        }
      },
      true,
    ); // Using capture to ensure blur is captured for all elements

    // Special case for select field, which needs change event
    document.getElementById("subject").addEventListener("change", function () {
      validateField("subject");
    });

    // Form submission handler
    form.addEventListener("submit", function (event) {
      event.preventDefault();

      // Validate all fields at once
      const isFormValid = Object.keys(formFields).every((fieldId) =>
        validateField(fieldId, true),
      );

      if (!isFormValid) {
        // Focus the first invalid field for accessibility
        const firstInvalidField = Object.keys(formFields).find(
          (fieldId) => !validateField(fieldId, false),
        );

        if (firstInvalidField) {
          document.getElementById(firstInvalidField).focus();
        }
        return;
      }

      // Show loading state
      submitButton.disabled = true;
      submitButton.innerHTML =
        '<span class="inline-block animate-pulse">Sending...</span>';
      submitButton.setAttribute("aria-busy", "true");

      // Prepare form data for submission
      const templateParams = {
        from_name: document.getElementById("name").value,
        reply_to: document.getElementById("email").value,
        subject: document.getElementById("subject").value,
        message: document.getElementById("message").value,
      };

      // Send the form using EmailJS
      emailjs
        .send(emailJSServiceID, emailJSTemplateID, templateParams)
        .then(function () {
          // Success handling
          submitButton.innerHTML = "Send Message";
          submitButton.disabled = false;
          submitButton.setAttribute("aria-busy", "false");

          // Reset form and validation styles
          form.reset();
          Object.keys(formFields).forEach((fieldId) => {
            const field = document.getElementById(fieldId);
            field.classList.remove("border-emerald-500", "focus:border-emerald-500", "focus:ring-emerald-500/50", "border-red-500", "focus:border-red-500", "focus:ring-red-500/50");
            field.classList.add("border-slate-200", "focus:border-brand-500", "focus:ring-brand-500/30"); // Restore default border/focus
            field.setAttribute("aria-invalid", "false");
            const errorElement = field.nextElementSibling;
            if (errorElement && errorElement.classList.contains('error-text')) {
                errorElement.classList.add('hidden');
                const errorMessageSpan = errorElement.querySelector('.error-message');
                if (errorMessageSpan) {
                    errorMessageSpan.textContent = '';
                }
            }
          });

          formStatus.classList.remove("hidden");
          successMessage.classList.remove("hidden");
          successMessage.querySelector('div').classList.add("flex");
          errorMessage.classList.add("hidden");

          // Announce success for screen readers
          successMessage.setAttribute("role", "alert");

          // Hide success message after 5 seconds
          setTimeout(function () {
            formStatus.classList.add("hidden");
            successMessage.classList.add("hidden");
            successMessage.querySelector('div').classList.remove("flex");
            successMessage.removeAttribute("role");
          }, 5000);
        })
        .catch(function (error) {
          // Error handling
          console.error("EmailJS error:", error);

          submitButton.innerHTML = "Send Message";
          submitButton.disabled = false;
          submitButton.setAttribute("aria-busy", "false");

          formStatus.classList.remove("hidden");
          errorMessage.classList.remove("hidden");
          errorMessage.querySelector('div').classList.add("flex");
          successMessage.classList.add("hidden");

          // Announce error for screen readers
          errorMessage.setAttribute("role", "alert");
        });
    });
  }

  document.addEventListener("DOMContentLoaded", setUpForm);
  document.addEventListener("astro:page-load", setUpForm);
</script>
