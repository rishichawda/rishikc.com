---
import { getCollection } from "astro:content";
import Layout from "../../layouts/base_layout.astro";
import { Image } from "astro:assets";
import { Schema } from "astro-seo-schema";
import SeriesIndicator from "../../components/article/series_indicator.astro";

const page_info = {
    title: "Articles | Rishi Chawda",
    description: "Articles | Rishi Chawda",
    keywords: "Articles | Rishi Chawda",
};

// Get all articles
const allArticles = await getCollection("articles");

// Sort articles by date
const sortedArticles = allArticles.sort(
    (a, b) => b.data.date.getTime() - a.data.date.getTime(),
);

// Get unique tags
const allTags = [
    ...new Set(sortedArticles.flatMap((article) => article.data.tags)),
];

const itemsPerPage = 5;
const totalPages = Math.ceil(sortedArticles.length / itemsPerPage);
const currentPage = 1;

// Format date
function formatDate(date: Date): string {
    return new Date(date).toLocaleDateString("en-US", {
        day: "numeric",
        month: "long",
        year: "numeric",
    });
}

// Prepare searchable content
function getSearchableContent(article: any): string {
    return [
        article.data.title,
        article.data.description,
        article.data.subtitle,
        article.data.keywords,
        article.data.tags.join(" "),
    ]
        .filter(Boolean)
        .join(" ")
        .toLowerCase();
}

// Get current page URL for schema
const pageUrl = new URL(
  Astro.url.pathname,
  Astro.site || "https://rishikc.com",
).toString();
---

<Layout page_info={page_info}>
    <!-- CollectionPage JSON-LD Schema for Articles Index -->
    <Schema
        slot="head"
        item={{
            "@context": "https://schema.org",
            "@type": "CollectionPage",
            name: "Articles by Rishi Chawda",
            description: "Technical articles, tutorials, and insights on web development, engineering, and technology",
            url: pageUrl,
            mainEntity: {
                "@type": "ItemList",
                numberOfItems: sortedArticles.length,
                itemListElement: sortedArticles.slice(0, 10).map((article, index) => ({
                    "@type": "ListItem",
                    position: index + 1,
                    item: {
                        "@type": article.data.jsonld_schema || "Article",
                        headline: article.data.title,
                        description: article.data.description,
                        url: new URL(article.data.path, Astro.site || "https://rishikc.com").toString(),
                        datePublished: article.data.date.toISOString(),
                        keywords: article.data.tags.join(", ")
                    }
                }))
            },
            potentialAction: [
                {
                    "@type": "ReadAction",
                    target: pageUrl,
                    name: "Browse Articles"
                },
                {
                    "@type": "BookmarkAction", 
                    target: pageUrl,
                    name: "Bookmark Articles Page"
                }
            ]
        }}
    />

    <style slot="head">
        .bg-grid-slate-100 {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='32' height='32' fill='none' stroke='rgb(15 23 42 / 0.04)'%3e%3cpath d='m0 .5 32 0'/%3e%3cpath d='m0 16.5 32 0'/%3e%3cpath d='m0 32.5 32 0'/%3e%3cpath d='m.5 0 0 32'/%3e%3cpath d='m16.5 0 0 32'/%3e%3cpath d='m32.5 0 0 32'/%3e%3c/svg%3e");
        }
        
        .line-clamp-2 {
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
        
        .line-clamp-3 {
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
        
        /* Enhanced smooth animations */
        * {
            scroll-behavior: smooth;
        }
        
        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }
        
        ::-webkit-scrollbar-track {
            background: #f1f5f9;
        }
        
        ::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 4px;
        }
        
        ::-webkit-scrollbar-thumb:hover {
            background: #94a3b8;
        }
    </style>

    <main class="min-h-screen bg-gradient-to-br from-brand-50/30 via-white to-brand-100/40">
        <!-- Hero Section -->
        <div class="relative overflow-hidden bg-gradient-to-r from-brand-600/5 via-brand-500/5 to-brand-400/5 border-b border-brand-200/30">
            <!-- Background Pattern -->
            <div class="absolute inset-0 bg-grid-slate-100 [mask-image:linear-gradient(0deg,white,rgba(255,255,255,0.6))]"></div>
            
            <div class="relative max-w-[1300px] mx-auto px-4 sm:px-6 lg:px-12 py-12 sm:py-16 lg:py-20">
                <div class="text-center max-w-3xl mx-auto">
                    <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold text-gray-900 mb-6 font-['Red_Hat_Display_Variable'] leading-tight">
                        <span class="bg-gradient-to-r from-brand-700 via-brand-600 to-brand-500 bg-clip-text text-transparent">
                            Articles
                        </span>
                    </h1>
                    <p class="text-lg sm:text-xl text-gray-600 mb-8 font-['Montserrat_Variable'] leading-relaxed">
                        Insights on web development, engineering, and technology
                    </p>
                    
                    <!-- Back to home button -->
                    <a
                        href="/"
                        class="group inline-flex items-center px-8 py-4 bg-white/80 backdrop-blur-sm border border-brand-200/50 rounded-2xl text-brand-700 hover:text-brand-600 hover:bg-white hover:shadow-xl hover:shadow-brand-500/10 transition-all duration-300 font-['Montserrat_Variable'] text-sm font-medium"
                    >
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            class="h-4 w-4 mr-2 group-hover:-translate-x-1 transition-transform duration-300"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke="currentColor"
                            stroke-width="2"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                d="M10 19l-7-7m0 0l7-7m-7 7h18"
                            ></path>
                        </svg>
                        Back to home
                    </a>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="max-w-[1300px] mx-auto px-4 sm:px-6 lg:px-12 py-12 sm:py-16 lg:py-20">
            <div class="flex flex-col xl:grid xl:grid-cols-[1fr_350px] gap-12 lg:gap-16">
                <!-- Main content area -->
                <div class="order-2 xl:order-1">
                    <!-- Search bar -->
                    <div class="mb-10">
                        <div class="relative">
                            <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                                <svg class="h-5 w-5 text-brand-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0Z" />
                                </svg>
                            </div>
                            <input
                                type="text"
                                id="search"
                                placeholder="Search articles by title, description, or tags..."
                                class="font-['Montserrat_Variable'] w-full pl-12 pr-6 py-4 rounded-2xl bg-white/70 backdrop-blur-sm border border-brand-200/50 text-gray-700 placeholder-gray-500 text-base focus:ring-2 focus:ring-brand-500/30 focus:border-brand-500/50 focus:outline-none transition-all duration-300 shadow-sm hover:shadow-md"
                            />
                        </div>
                    </div>

                    <!-- Articles grid -->
                    <div class="grid gap-6">
                        {
                            sortedArticles.map((article) => (
                                <article
                                    class="group data-[hidden=true]:hidden"
                                    data-tags={article.data.tags.join(",")}
                                    data-title={article.data.title.toLowerCase()}
                                    data-search={getSearchableContent(article)}
                                >
                                    <a
                                        href={article.data.path}
                                        class="block bg-white/70 backdrop-blur-sm rounded-2xl border border-brand-200/30 overflow-hidden hover:shadow-xl hover:shadow-brand-500/10 transition-all duration-500 hover:-translate-y-1 hover:border-brand-300/50"
                                    >
                                        <div class="flex flex-col sm:flex-row">
                                            <div class="flex-shrink-0">
                                                <div class="relative h-56 sm:h-full overflow-hidden">
                                                    <Image
                                                        src={article.data.hero_image}
                                                        alt={
                                                            article.data.hero_image_alt ||
                                                            article.data.title
                                                        }
                                                        width={256}
                                                        height={160}
                                                        class="w-full h-full object-cover object-center group-hover:scale-105 transition-transform duration-700"
                                                        transition:name={`${article.data.path}-image`}
                                                    />
                                                    <div class="absolute inset-0 bg-gradient-to-t from-black/20 via-transparent to-transparent"></div>
                                                </div>
                                            </div>
                                            <div class="flex-1 p-5 flex flex-col justify-between">
                                                <div>
                                                    <div class="mb-4">
                                                        <div class="flex items-start justify-between gap-3 mb-3">
                                                            <h2 
                                                                transition:name={`${article.data.path}-title`} 
                                                                class="font-['Red_Hat_Display_Variable'] text-lg sm:text-xl font-bold text-gray-900 group-hover:text-brand-700 transition-colors duration-300 line-clamp-2 leading-tight flex-1"
                                                            >
                                                                {article.data.title}
                                                            </h2>
                                                            <SeriesIndicator article={article} compact={true} />
                                                        </div>
                                                        
                                                        <p class="font-['Montserrat_Variable'] text-gray-600 line-clamp-2 leading-relaxed text-sm mb-3">
                                                            {article.data.description}
                                                        </p>

                                                        <div class="flex flex-wrap gap-1.5">
                                                            {article.data.tags.map((tag) => (
                                                                <span class="font-['Montserrat_Variable'] text-xs text-brand-600 border border-brand-200 px-2 py-0.5 rounded-md">
                                                                    {tag}
                                                                </span>
                                                            ))}
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                <div class="flex items-center justify-between mt-4 pt-3 border-t border-brand-100/50">
                                                    <time class="font-['Montserrat_Variable'] text-xs font-medium text-gray-400/90 tracking-wide leading-tight whitespace-nowrap">
                                                        {formatDate(article.data.date)}
                                                    </time>
                                                    <span class="font-['Montserrat_Variable'] text-sm font-medium text-brand-600 group-hover:text-brand-700 transition-colors flex items-center">
                                                        Read article
                                                        <svg class="ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
                                                        </svg>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </a>
                                </article>
                            ))
                        }
                    </div>

                    <!-- No Results Message -->
                    <div id="no-articles-found" class="text-center py-16 hidden">
                        <div class="max-w-md mx-auto">
                            <div class="text-6xl mb-6 opacity-60">📝</div>
                            <h3 class="text-2xl font-bold text-brand-900 mb-4 font-['Red_Hat_Display_Variable']">
                                No articles found
                            </h3>
                            <p class="text-brand-600 font-['Montserrat_Variable'] mb-8 text-lg leading-relaxed">
                                We couldn't find any articles matching your search. Try different keywords or browse all articles.
                            </p>
                            <div class="flex flex-col sm:flex-row justify-center gap-4">
                                <button
                                    id="clear-search"
                                    class="group inline-flex items-center justify-center px-8 py-4 bg-gradient-to-r from-brand-600 to-brand-500 hover:from-brand-700 hover:to-brand-600 text-white rounded-2xl transition-all duration-300 font-['Montserrat_Variable'] font-medium shadow-lg hover:shadow-xl hover:shadow-brand-500/30 transform hover:-translate-y-0.5 text-nowrap"
                                >
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2 group-hover:rotate-12 transition-transform duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                                    </svg>
                                    Clear Search
                                </button>
                                <a
                                    href="/search/"
                                    class="group inline-flex items-center justify-center px-8 py-4 bg-white/80 backdrop-blur-sm border border-brand-200/50 hover:bg-white hover:border-brand-300/50 text-brand-700 hover:text-brand-600 rounded-2xl transition-all duration-300 font-['Montserrat_Variable'] font-medium shadow-lg hover:shadow-xl hover:shadow-brand-500/10 transform hover:-translate-y-0.5 text-nowrap"
                                >
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2 group-hover:scale-110 transition-transform duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="m21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0Z" />
                                    </svg>
                                    Search entire rishikc.com
                                </a>
                            </div>
                        </div>
                    </div>

                    <!-- Pagination -->
                    <div class="mt-16 flex justify-center">
                        <div class="flex items-center space-x-1">
                            <button
                                class="flex items-center justify-center w-12 h-12 rounded-full font-medium text-base transition-all duration-300 bg-white/70 backdrop-blur-sm border border-brand-200/50 text-brand-600 hover:bg-white hover:text-brand-700 hover:shadow-lg hover:shadow-brand-500/10 disabled:opacity-40 disabled:hover:bg-white/70 disabled:cursor-not-allowed cursor-pointer"
                                data-prev
                                disabled={currentPage === 1}
                            >
                                <svg
                                    width="20"
                                    height="20"
                                    viewBox="0 0 24 24"
                                    fill="none"
                                    xmlns="http://www.w3.org/2000/svg"
                                    class="rotate-180"
                                >
                                    <path
                                        d="M9 5l7 7-7 7"
                                        stroke="currentColor"
                                        stroke-width="2"
                                        stroke-linecap="round"
                                        stroke-linejoin="round"></path>
                                </svg>
                            </button>
                            
                            {
                                Array.from({ length: totalPages }, (_, i) => i + 1).map(
                                    (page) => (
                                        <button
                                            class:list={[
                                                "flex items-center justify-center w-12 h-12 rounded-full font-medium text-base transition-all duration-300 cursor-pointer",
                                                page === currentPage
                                                    ? "bg-gradient-to-r from-brand-600 to-brand-500 text-white shadow-lg shadow-brand-500/30"
                                                    : "bg-white/70 backdrop-blur-sm border border-brand-200/50 text-brand-600 hover:bg-white hover:text-brand-700 hover:shadow-lg hover:shadow-brand-500/10",
                                            ]}
                                            data-page={page}
                                        >
                                            {page}
                                        </button>
                                    ),
                                )
                            }
                            
                            <button
                                class="flex items-center justify-center w-12 h-12 rounded-full font-medium text-base transition-all duration-300 bg-white/70 backdrop-blur-sm border border-brand-200/50 text-brand-600 hover:bg-white hover:text-brand-700 hover:shadow-lg hover:shadow-brand-500/10 disabled:opacity-40 disabled:hover:bg-white/70 disabled:cursor-not-allowed cursor-pointer"
                                data-next
                                disabled={currentPage >= totalPages}
                            >
                                <svg
                                    width="20"
                                    height="20"
                                    viewBox="0 0 24 24"
                                    fill="none"
                                    xmlns="http://www.w3.org/2000/svg"
                                >
                                    <path
                                        d="M9 5l7 7-7 7"
                                        stroke="currentColor"
                                        stroke-width="2"
                                        stroke-linecap="round"
                                        stroke-linejoin="round"></path>
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Sidebar -->
                <div class="order-1 xl:order-2">
                    <div class="sticky top-8">
                        <!-- Global Search Card -->
                        <div class="mb-8">
                            <a
                                href="/search/"
                                class="block p-6 bg-gradient-to-br from-brand-500/10 via-brand-400/10 to-brand-300/10 rounded-3xl border border-brand-200/50 hover:shadow-xl hover:shadow-brand-500/10 transition-all duration-500 hover:-translate-y-1 hover:border-brand-300/50 group"
                            >
                                <div class="flex items-start gap-4">
                                    <div class="flex-shrink-0 w-12 h-12 bg-gradient-to-br from-brand-600 to-brand-500 rounded-2xl flex items-center justify-center group-hover:scale-105 transition-transform duration-300">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="m21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0Z" />
                                        </svg>
                                    </div>
                                    <div class="flex-1">
                                        <h3 class="text-brand-800 font-bold text-lg font-['Red_Hat_Display_Variable'] mb-2 group-hover:text-brand-700 transition-colors">
                                            Global Search
                                        </h3>
                                        <p class="text-brand-600 text-sm font-['Montserrat_Variable'] leading-relaxed">
                                            Search across articles, gallery, and quotes to find exactly what you're looking for
                                        </p>
                                    </div>
                                </div>
                            </a>
                        </div>

                        <!-- Article Series Card -->
                        <div class="mb-8">
                            <a
                                href="/articles/series/"
                                class="block p-6 bg-gradient-to-br from-purple-50/80 via-white/80 to-purple-100/50 rounded-3xl border border-purple-200/40 hover:shadow-xl hover:shadow-purple-500/10 transition-all duration-500 hover:-translate-y-1 hover:border-purple-300/60 group"
                            >
                                <div class="flex items-start gap-4">
                                    <div class="flex-shrink-0 w-12 h-12 bg-gradient-to-br from-purple-500 to-purple-600 rounded-2xl flex items-center justify-center group-hover:scale-105 transition-transform duration-300 shadow-lg">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                                        </svg>
                                    </div>
                                    <div class="flex-1">
                                        <h3 class="text-purple-800 font-bold text-lg font-['Red_Hat_Display_Variable'] mb-2 group-hover:text-purple-700 transition-colors">
                                            Article Series
                                        </h3>
                                        <p class="text-purple-600 text-sm font-['Montserrat_Variable'] leading-relaxed">
                                            Explore in-depth, multi-part tutorials and comprehensive guides on complex topics
                                        </p>
                                    </div>
                                </div>
                            </a>
                        </div>

                        <!-- Quotes Card -->
                        <div class="mb-10">
                            <a
                                href="/reads/"
                                class="block p-6 bg-white/70 backdrop-blur-sm rounded-3xl border border-brand-200/30 hover:shadow-xl hover:shadow-brand-500/10 transition-all duration-500 hover:-translate-y-1 hover:border-brand-300/50 group"
                            >
                                <div class="flex items-start gap-4">
                                    <div class="flex-shrink-0 w-12 h-12 bg-gradient-to-br from-brand-300 via-brand-400 to-brand-700 rounded-2xl flex items-center justify-center group-hover:scale-105 transition-transform duration-300">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                                        </svg>
                                    </div>
                                    <div class="flex-1">
                                        <h3 class="text-gray-800 font-bold text-lg font-['Red_Hat_Display_Variable'] mb-2 group-hover:text-brand-700 transition-colors">
                                            Favourite Quotes
                                        </h3>
                                        <p class="text-gray-600 text-sm font-['Montserrat_Variable'] leading-relaxed">
                                            Discover inspiring lines from books and the internet that resonated with me
                                        </p>
                                    </div>
                                </div>
                            </a>
                        </div>

                        <!-- Tags Filter -->
                        <div class="bg-white/70 backdrop-blur-sm rounded-3xl border border-brand-200/30 p-6">
                            <h3 class="text-gray-900 font-bold text-xl font-['Red_Hat_Display_Variable'] mb-6 flex items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3 text-brand-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.99 1.99 0 013 12V7a4 4 0 014-4z" />
                                </svg>
                                Filter by Tags
                            </h3>
                            <div class="flex flex-wrap gap-2">
                                {
                                    allTags.map((tag) => (
                                        <button
                                            class="group inline-flex items-center font-['Montserrat_Variable'] px-3 py-1.5 rounded-lg text-xs font-medium bg-brand-50 text-brand-700 border border-brand-200/50 hover:bg-brand-100 hover:text-brand-800 hover:shadow-md transition-all duration-300 data-[selected=true]:bg-gradient-to-r data-[selected=true]:from-brand-600 data-[selected=true]:to-brand-500 data-[selected=true]:text-white data-[selected=true]:shadow-lg data-[selected=true]:shadow-brand-500/30 cursor-pointer"
                                            data-tag={tag}
                                        >
                                            <span>{tag}</span>
                                            <svg
                                                class="overflow-hidden w-0 group-data-[selected=true]:w-3 group-data-[selected=true]:ml-1.5 transition-all duration-300"
                                                viewBox="0 0 24 24"
                                                fill="none"
                                                stroke="currentColor"
                                                stroke-width="2"
                                                stroke-linecap="round"
                                                stroke-linejoin="round"
                                            >
                                                <line x1="18" y1="6" x2="6" y2="18" />
                                                <line x1="6" y1="6" x2="18" y2="18" />
                                            </svg>
                                        </button>
                                    ))
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
</Layout>

<script>
    document.addEventListener('astro:page-load', () => {
        // State
        let currentPage = 1;
        const itemsPerPage = 5;
        const selectedTags = new Set();

        // DOM Elements
        const searchInput = document.getElementById("search") as HTMLInputElement;
        const articleElements = document.querySelectorAll("[data-tags]") as NodeListOf<HTMLElement>;
        const articles = [...articleElements];
        const noResultsElement = document.getElementById("no-articles-found") as HTMLElement;
        const clearSearchButton = document.getElementById("clear-search") as HTMLButtonElement;

        const tagButtonElements = document.querySelectorAll("[data-tag]") as NodeListOf<HTMLButtonElement>;
        const tagButtons = [...tagButtonElements];

        const pageButtonElements = document.querySelectorAll("[data-page]") as NodeListOf<HTMLButtonElement>;
        const pageButtons = [...pageButtonElements];

        const prevButton = document.querySelector("[data-prev]") as HTMLButtonElement;
        const nextButton = document.querySelector("[data-next]") as HTMLButtonElement;

        // Filter and pagination logic
        function updateArticlesVisibility() {
            const searchTerm = searchInput?.value.toLowerCase() || "";
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;

            let visibleCount = 0;
            articles.forEach((article) => {
                const matchesSearch = (article.dataset.search || "").includes(searchTerm);
                const matchesTags =
                    selectedTags.size === 0 ||
                    Array.from(selectedTags).every((tag) =>
                        (article.dataset.tags || "")
                            .toLowerCase()
                            .includes((tag as string).toLowerCase()),
                    );

                const isVisible = matchesSearch && matchesTags;
                if (isVisible) {
                    visibleCount++;
                    article.dataset.hidden = (
                        visibleCount <= startIndex || visibleCount > endIndex
                    ).toString();
                } else {
                    article.dataset.hidden = "true";
                }
            });

            const totalPages = Math.ceil(visibleCount / itemsPerPage);

            // Show/hide no results message
            if (visibleCount === 0 && (searchTerm || selectedTags.size > 0)) {
                noResultsElement.classList.remove("hidden");
            } else {
                noResultsElement.classList.add("hidden");
            }

            pageButtons.forEach((button) => {
                const page = parseInt(button.dataset.page || "1", 10);
                button.classList.toggle("hidden", page > totalPages);
                
                // Update styles for current page
                if (page === currentPage) {
                    button.className = "flex items-center justify-center w-12 h-12 rounded-full font-medium text-base transition-all duration-300 bg-gradient-to-r from-brand-600 to-brand-500 text-white shadow-lg shadow-brand-500/30 cursor-pointer";
                } else {
                    button.className = "flex items-center justify-center w-12 h-12 rounded-full font-medium text-base transition-all duration-300 bg-white/70 backdrop-blur-sm border border-brand-200/50 text-brand-600 hover:bg-white hover:text-brand-700 hover:shadow-lg hover:shadow-brand-500/10 cursor-pointer";
                }
            });

            if (prevButton) {
                prevButton.disabled = currentPage === 1;
            }
            if (nextButton) {
                nextButton.disabled = currentPage >= totalPages;
            }

            // Show or hide no results message
            const noResultsMessage = document.getElementById("no-articles-found");
            if (noResultsMessage) {
                noResultsMessage.classList.toggle("hidden", visibleCount > 0);
            }
        }

        searchInput?.addEventListener("input", () => {
            currentPage = 1;
            updateArticlesVisibility();
        });

        tagButtons.forEach((button) => {
            button.addEventListener("click", () => {
                const tag = button.dataset.tag as string;
                if (selectedTags.has(tag)) {
                    selectedTags.delete(tag);
                    button.dataset.selected = "false";
                } else {
                    selectedTags.add(tag);
                    button.dataset.selected = "true";
                }
                currentPage = 1;
                updateArticlesVisibility();
            });
        });

        pageButtons.forEach((button) => {
            button.addEventListener("click", () => {
                currentPage = parseInt(button.dataset.page || "1", 10);
                updateArticlesVisibility();
            });
        });

        prevButton?.addEventListener("click", () => {
            if (currentPage > 1) {
                currentPage--;
                updateArticlesVisibility();
            }
        });

        nextButton?.addEventListener("click", () => {
            const totalPages = Math.ceil(articles.length / itemsPerPage);
            if (currentPage < totalPages) {
                currentPage++;
                updateArticlesVisibility();
            }
        });

        // Initial display
        updateArticlesVisibility();

        // Clear search functionality
        clearSearchButton?.addEventListener("click", () => {
            if (searchInput) {
                searchInput.value = "";
            }
            selectedTags.clear();
            tagButtons.forEach((button) => {
                button.dataset.selected = "false";
            });
            currentPage = 1;
            updateArticlesVisibility();
        });
    });
</script>
