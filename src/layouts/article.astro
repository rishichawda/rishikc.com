---
import { Image } from "astro:assets";
import { Schema } from "astro-seo-schema";
import { getCollection } from "astro:content";

interface Social { platform: string; url: string; }
interface ProfileData { name: string; socials: Social[]; }

const profileEntry = await getCollection("profile");
const profile = profileEntry[0].data as ProfileData;

let { content, frontmatter } = Astro.props;

const date = new Date(content.date).toLocaleDateString("en-us", {
	year: "numeric",
	month: "long",
	day: "numeric",
});

const isoDate = content.date ? new Date(content.date).toISOString() : "";
const articleUrl = new URL(
	content.path || Astro.url.pathname,
	Astro.site || "https://rishikc.com",
).toString();
const imageUrl = content.hero_image?.src
	? new URL(
			content.hero_image.src,
			Astro.site || "https://rishikc.com",
		).toString()
	: "";
---

<article class="max-w-[90%] flex flex-col mx-auto items-center pt-16">
	<Schema
		item={{
			"@context": "https://schema.org",
			"@type": content.jsonld_schema || "Article",
			headline: content.title,
			description: content.description,
			image: imageUrl,
			datePublished: isoDate,
			dateModified: isoDate,
			author: {
				"@type": "Person",
				name: profile.name,
				url: "https://rishikc.com",
				sameAs: profile.socials.map((social: Social) => social.url),
			},
			publisher: {
				"@type": "Person",
				name: profile.name,
				url: "https://rishikc.com",
				sameAs: profile.socials.map((social: Social) => social.url),
			},
			mainEntityOfPage: {
				"@type": "WebPage",
				"@id": articleUrl,
			},
			keywords: content.tags?.join(", "),
			potentialAction: [
				{
					"@type": "ReadAction",
					target: articleUrl,
					name: "Read Article"
				},
				{
					"@type": "ShareAction",
					target: [
						{
							"@type": "EntryPoint",
							urlTemplate: `https://twitter.com/intent/tweet?url=${encodeURIComponent(articleUrl)}&text=${encodeURIComponent(content.title)}`,
							actionPlatform: "https://schema.org/DesktopWebPlatform"
						},
						{
							"@type": "EntryPoint",
							urlTemplate: `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(articleUrl)}`,
							actionPlatform: "https://schema.org/DesktopWebPlatform"
						}
					],
					name: "Share Article"
				},
				{
					"@type": "BookmarkAction",
					target: articleUrl,
					name: "Bookmark Article"
				}
			]
		}}
	/>
	<div class="inline-flex flex-col justify-start items-center gap-2.5 mb-4">
		<h1
			transition:name={`${content.path}-title`}
			class="justify-start text-black text-3xl md:text-4xl text-center font-semibold font-['Red_Hat_Display_Variable'] leading-tight mb-2"
		>
			{content.title}
		</h1>
		{
			content.subtitle && (
				<h2 class="justify-start text-gray-700 text-center text-lg md:text-xl font-normal font-['Red_Hat_Display_Variable'] leading-normal mt-1">
					{content.subtitle}
				</h2>
			)
		}
	</div>
	<small
		transition:name={`${content.path}-date`}
		class="justify-start text-gray-600 text-center text-sm font-normal font-['Montserrat_Variable'] leading-tight mb-8"
	>
		{date}
	</small>
	<div class="w-full md:max-w-[790px] mb-10">
		<Image
			class="w-full rounded-xl shadow-md"
			src={content.hero_image}
			alt={content.hero_image_alt || `${content.title}`}
			transition:name={`${content.path}-image`}
		/>
		<div class="inline-flex w-full px-2 mt-5 justify-between items-center">
			<div
				class="inline-flex justify-start items-center gap-2 max-w-3/4 flex-wrap"
			>
				{
					content.tags.map((tag: string) => (
						<div class="px-3 py-1 bg-brand-500 rounded-md inline-flex flex-col justify-center items-center gap-2.5 overflow-hidden">
							<span class="justify-start bg-brand-500 text-white text-xs font-medium font-['Montserrat_Variable'] leading-tight">
								{tag}
							</span>
						</div>
					))
				}
			</div>
			<small
				class="justify-end text-gray-500 text-xs font-normal font-['Montserrat_Variable'] leading-tight flex-shrink-0 ml-2"
			>
				{frontmatter.minutesRead}
			</small>
		</div>
	</div>
	<div
		class="mb-20 font-['Montserrat_Variable'] max-w-full lg:flex lg:flex-row lg:gap-4"
	>
		<slot />
	</div>
</article>
